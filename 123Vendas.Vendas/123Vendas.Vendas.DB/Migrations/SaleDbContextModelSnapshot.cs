// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _123Vendas.Vendas.DB;

#nullable disable

namespace _123Vendas.Vendas.DB.Migrations
{
    [DbContext(typeof(SaleDbContext))]
    partial class SaleDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("_123Vendas.Vendas.Data.Entities.Sale", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<Guid>("BranchId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("banch_id");

                    b.Property<bool?>("Canceled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("CanceledAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("CanceledBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("company_id");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("customer_id");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("deleted_at");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("deleted_by");

                    b.Property<DateTimeOffset?>("IncludedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 9, 27, 1, 4, 29, 938, DateTimeKind.Unspecified).AddTicks(3757), new TimeSpan(0, 0, 0, 0, 0)))
                        .HasColumnName("included_at");

                    b.Property<Guid?>("IncludedBy")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("included_by");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("deleted");

                    b.Property<string>("SaleCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("sale_code");

                    b.Property<DateTimeOffset>("SaleDate")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("sale_date");

                    b.Property<Guid>("SalerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("saler_id");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("total");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("updated_at");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.ToTable("sales", (string)null);
                });

            modelBuilder.Entity("_123Vendas.Vendas.Data.Entities.SaleProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<bool?>("Canceled")
                        .HasColumnType("bit")
                        .HasColumnName("canceled");

                    b.Property<DateTimeOffset?>("CanceledAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("canceled_at");

                    b.Property<Guid?>("CanceledBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("canceled_by");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("deleted_at");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("deleted_by");

                    b.Property<DateTimeOffset?>("IncludedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 9, 27, 1, 4, 29, 939, DateTimeKind.Unspecified).AddTicks(3825), new TimeSpan(0, 0, 0, 0, 0)))
                        .HasColumnName("included_at");

                    b.Property<Guid?>("IncludedBy")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("included_by");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("deleted");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("product_id");

                    b.Property<Guid>("SaleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("sale_id");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("updated_at");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.HasIndex("SaleId");

                    b.ToTable("sale_products", (string)null);
                });

            modelBuilder.Entity("_123Vendas.Vendas.Data.Entities.SaleProduct", b =>
                {
                    b.HasOne("_123Vendas.Vendas.Data.Entities.Sale", "Sale")
                        .WithMany("Products")
                        .HasForeignKey("SaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("_123Vendas.Vendas.Data.ValueObjects.ProductAmount", "Amount", b1 =>
                        {
                            b1.Property<Guid>("SaleProductId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("amount");

                            b1.Property<decimal>("Discount")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("decimal(18,2)")
                                .HasDefaultValue(0m)
                                .HasColumnName("discount");

                            b1.Property<decimal>("Quantity")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("quantity");

                            b1.HasKey("SaleProductId");

                            b1.ToTable("sale_products");

                            b1.WithOwner()
                                .HasForeignKey("SaleProductId");
                        });

                    b.Navigation("Amount");

                    b.Navigation("Sale");
                });

            modelBuilder.Entity("_123Vendas.Vendas.Data.Entities.Sale", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
